names(data1)
data1 %>%
select(date_lecture)
data1$date_lecture
data1
new_data1 <- data1 %>%
separate_rows(private_name, sep = " ")
new_data1
new_data1 <- data1 %>%
separate_rows(in_waiting_room, sep = " ")
new_data1
new_data1 <- data1 %>%
separate_rows(date_lecture, sep = "-")
new_data1
v1 = c(1,2,3,4,5,6)
v2 = c(1,2,3,4)
sort(v1, descending = TRUE)
sort(v1, decreasing = TRUE)
sort(desc(v1)
sort(desc(v1))
all_data
all_data %>%
group_by(private_name) %>%
sum(duration_minutes)
all_data %>%
group_by(private_name) %>%
mutate(thing = sum(duration_minutes))
max(thing)
max(all_data$thing)
all_data %>%
group_by(private_name) %>%
mutate(thing = sum(duration_minutes)) %>%
arrange()
all_data %>%
group_by(private_name) %>%
mutate(thing = sum(duration_minutes)) %>%
arrange(thing)
all_data %>%
group_by(private_name) %>%
mutate(thing = sum(duration_minutes)) %>%
arrange(desc(thing))
song_popularity <- c(67, 75, 96, 81, 91, 76, 96, 85, 95, 74, 77, 87, 76, 67, 84, 71, 96, 88, 74, 79, 97, 92, 95, 85, 81, 87, 92, 76, 92, 96, 63, 59, 83, 89, 70, 87, 81, 85, 95, 83, 98, 96, 80, 85, 92, 83, 91, 67, 93, 89, 85, 87, 77, 85, 89, 100, 83, 95, 76, 90, 75, 87, 71, 90, 72, 82, 74, 33, 83, 94, 79, 80, 74, 70, 74, 83, 75, 89, 88, 86, 68, 92, 75, 73)
sum(song_popularity[34:50])
sort(desc(song_popularity))
sort(song_popularity)
sort(song_popularity, decreasing = TRUE)
sort(song_popularity, decreasing = TRUE)[77]
song_popularity <- c(67, 75, 96, 81, 91, 76, 96, 85, 95, 74, 77, 87, 76, 67, 84, 71, 96, 88, 74, 79, 97, 92, 95, 85, 81, 87, 92, 76, 92, 96, 63, 59, 83, 89, 70, 87, 81, 85, 95, 83, 98, 96, 80, 85, 92, 83, 91, 67, 93, 89, 85, 87, 77, 85, 89, 100, 83, 95, 76, 90, 75, 87, 71, 90, 72, 82, 74, 33, 83, 94, 79, 80, 74, 70, 74, 83, 75, 89, 88, 86, 68, 92, 75, 73)
song_popularity[31]
song_popularity[22]
song_length <- c(193279, 216120, 153190, 185422, 195013, 231832, 207065, 231041, 256000, 185680, 212878, 172626, 157890, 213493, 225148, 206385, 202226, 184893, 179426, 213718, 215281, 164818, 174728, 179720, 185600, 206772, 143901, 187111, 193506, 169237, 141805, 238805, 165772, 214405, 214416, 175344, 188918, 96825, 161853, 278440, 210560, 168601, 214613, 207853, 173549, 242965, 161840, 136760, 226088, 160656, 257213, 216764, 145800, 186538, 227527, 212000, 194050, 197442, 270586, 200000, 173381, 175163, 195760, 200547, 136266, 221693, 173182, 161266, 198324, 186677, 205946, 133613, 261818, 178147, 202133, 160239, 204316, 202735, 153000, 224694, 162680, 224773, 168873, 165760, 203807, 186173, 193346, 174000, 152137, 258799, 176146, 189560)
song_length %<%
filter(song_length < 242965)
filter(song_length < 242965)
song_length <- c(193279, 216120, 153190, 185422, 195013, 231832, 207065, 231041, 256000, 185680, 212878, 172626, 157890, 213493, 225148, 206385, 202226, 184893, 179426, 213718, 215281, 164818, 174728, 179720, 185600, 206772, 143901, 187111, 193506, 169237, 141805, 238805, 165772, 214405, 214416, 175344, 188918, 96825, 161853, 278440, 210560, 168601, 214613, 207853, 173549, 242965, 161840, 136760, 226088, 160656, 257213, 216764, 145800, 186538, 227527, 212000, 194050, 197442, 270586, 200000, 173381, 175163, 195760, 200547, 136266, 221693, 173182, 161266, 198324, 186677, 205946, 133613, 261818, 178147, 202133, 160239, 204316, 202735, 153000, 224694, 162680, 224773, 168873, 165760, 203807, 186173, 193346, 174000, 152137, 258799, 176146, 189560)
sort(song_length)
song_title <- c("half of my hometown (feat. Kenny Chesney)", "I Hate YoungBoy", "If I Was a Cowboy", "Flower Shops (feat. Morgan Wallen)", "Essence (feat. Justin Bieber & Tems)", "Easy On Me", "Shivers", "Iffy", "Home Sweet", "Peru", "Super Gremlin", "Oh My God", "Good Morning Gorgeous", "Cold Heart - PNAU Remix", "High", "Heart On Fire", "Dos Oruguitas", "Do We Have A Problem?", "You Right", "Rocking A Cardigan in Atlanta", "Broadway Girls (feat. Morgan Wallen)", "Fingers Crossed", "Big Energy", "Bussin", "she's all i wanna be", "Come Back As A Country Boy", "By Your Side", "I Love You So", "Freaky Deaky", "Sacrifice", "Boyfriend", "abcdefu", "The Family Madrigal", "Numb Little Bug", "The Motto", "Doin' This", "I'm Tired - From 'Euphoria' An HBO Original Series", "STAY (with Justin Bieber)", "Rumors (feat. Lil Durk)", "Worst Day", "MAMIII", "Never Wanted To Be That Girl", "Circles Around This Town", "Nail Tech", "When Iâ€™m Gone (with Katy Perry)", "Cigarettes", "'Til You Can't", "Do It To It", "Save Your Tears (with Ariana Grande) (Remix)", "One Mississippi", "Closer (feat. H.E.R.)", "Bad Habits", "What Else Can I Do?", "Beautiful Lies", "TO THE MOON", "Usain Boo", "Still D.R.E.", "Ghost", "Beers On Me", "THATS WHAT I WANT", "love nwantiti (ah ah ah)", "Hrs and Hrs", "Sand In My Boots", "INDUSTRY BABY (feat. Jack Harlow)", "Slow Down Summer", "good 4 u", "The Joker And The Queen (feat. Taylor Swift)", "Surface Pressure", "I Wish", "AA", "You Should Probably Leave", "Knife Talk (with 21 Savage ft. Project Pat)", "Me or Sum (feat. Future & Lil Baby)", "Scorpio", "One Right Now (with The Weeknd)", "Heat Waves", "Never Say Never (with Lainey Wilson)", "All Of You", "23", "Buy Dirt", "Woman", "Don't Play That", "I Hate U")
song_title
nchar(song_title)
subset_titles <- song_title[nchar(song_title)>28]
subset_titles
subset_titles[1]
song_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vS8ynnfEAOH9G59D6ZS0EhW6X9taKBE2ou0Z6qO_XJUzwCuD_DjNvDNRNuouNivlgptmqyqBZYsrKTs/pub?gid=39175924&single=true&output=csv")
song_data %>%
arrange(energy)
song_data %>%
arrange(energy) %>%
filter(rand_var > 0.57)
song_title <- c("Pressure", "Still D.R.E.", "Circles Around This Town", "Peru", "Rumors (feat. Lil Durk)", "Oh My God", "P power (feat. Drake)", "High", "Waiting On A Miracle", "The Motto", "City of Gods", "Heart On Fire", "Beautiful Lies")
song_length <- c(193279, 270586, 195760, 187111, 185855, 225148, 193346, 175163, 161840, 164818, 256000, 258799, 212878)
song_popularity <- c(73, 91, 76, 85, 83, 93, 85, 87, 87, 94, 87, 71, 75)
song_data <- tibble(song_title, song_length, song_popularity)
song_data %>%
mutate(song_income = song_length * 0.03)
song_data %>%
mutate(song_income = song_length * 0.03,
song_title_lower = str_to_lower(song_title))
song_data %>%
filter(p %in% str_to_lower(song_title))
song_data %>%
filter("p" %in% str_to_lower(song_title))
song_data %>%
filter(str_detect(str_to_lower(song_title), "p"))
library(jsonlite)
data <- fromJSON("https://stat.auckland.ac.nz/~fergusson/stats220_S124/data/lab3b_json6.json")
song_data <- fromJSON("https://stat.auckland.ac.nz/~fergusson/stats220_S124/data/lab3b_json6.json")
song_data[24]
song_data
song_data %>%
pull(duration_ms)
song_data %>%
pull(duration_ms) %>%
median()
song_data %>%
pull(track_popularity) %>%
unique()
song_data %>%
pull(track_popularity) %>%
unique() %>%
length()
song_data %>%
separate_rows(artist_name)
song_data %>%
separate_rows(artist_name) %>%
unique()
song_data %>%
separate_rows(artist_name, ", ") %>%
unique()
song_data %>%
separate_rows(artist_name) %>%
unique()
song_data
song_data$artist_name
song_data %>%
separate_rows(artist_name, sep = ",")
song_data %>%
separate_rows(artist_name, sep = ", ")
song_data %>%
separate_rows(artist_name, sep = ", ") %>%
unique()
filtered <- song_data %>%
separate_rows(artist_name, sep = ", ") %>%
filtered <- song_data %>%
separate_rows(artist_name, sep = ", ") %>%
filtered
filtered <- song_data %>%
separate_rows(artist_name, sep = ", ") %>%
glimpse(filtered)
filtered <- song_data %>%
separate_rows(artist_name, sep = ", ")
glimpse(filtered)
glimpse(filtered$artist_name)
print(filtered$artist_name)
print(unique(filtered$artist_name))
song_data <- fromJSON("https://stat.auckland.ac.nz/~fergusson/stats220_S124/data/lab3b_json6.json")
song_data %>%
filter(track_popularity > 63) %>%
filter(str_detect(str_to_lower(song_title), "pop"))
song_data %>%
filter(track_popularity > 63,
str_detect(str_to_lower(song_title), "pop"))
song_data
song_data %>%
filter(track_popularity > 63,
str_detect(str_to_lower(track_name), "pop"))
song_data %>%
filter(track_popularity > 63,
str_detect(str_to_lower(artist_genre), "pop"))
pop_songs <- song_data %>%
mutate(pop = ifelse(str_detect(str_to_lower(artist_genre), "pop"),
"yes",
"no"))
pop_songs
pop_songs %>%
group_by(pop) %>%
summarise(median_popularity = median(track_popularity))
long_songs <- song_data %>%
mutate(track_name_num_words = str_count(track_name))
long_songs
long_songs %>%
filter(track_name_num_words>4)
song_data <- fromJSON("https://stat.auckland.ac.nz/~fergusson/stats220_S124/data/lab4A.json")
song_data
song_data <- fromJSON("https://stat.auckland.ac.nz/~fergusson/stats220_S124/data/lab4A.json")
summarised_data <- song_data %>%
mutate(song_speed = ifelse(tempo > 120, "fast", "slow")) %>%
group_by(song_speed) %>%
summarise(n = n())
ggplot(data = summarised_data) +
geom_col(aes(x = song_speed, y = n, fill = song_speed)) %>%
labs(title = "comparing bla bla bla", x = "speed of songs bla", y = "num of songs")
ggplot(data = summarised_data) +
geom_col(aes(x = song_speed, y = n, fill = song_speed)) +
labs(title = "comparing bla bla bla", x = "speed of songs bla", y = "num of songs")
song_data <- fromJSON("https://stat.auckland.ac.nz/~fergusson/stats220_S124/data/lab4A.json")
song_data
song_data <- fromJSON("https://stat.auckland.ac.nz/~fergusson/stats220_S124/data/lab4A.json")
song_data
summarised_data <- song_data %>%
mutate(valence_group = case_when(
valence < 0.33 ~ 'sad',
valence < 0.67 ~ 'OK',
TRUE ~ 'happy')) %>%
group_by(mode_name, valence_group) %>%
summarise(mean_tempo = mean(tempo, na.rm = TRUE))
summarised_data %>%
ggplot() +
geom_point(aes(x = mean_tempo, y = mode_name, colour = valence_group), size = 5)
song_data <- fromJSON("https://stat.auckland.ac.nz/~fergusson/stats220_S124/data/lab4B.json")
genre_data <- song_data %>%
separate_rows(artist_genre, sep = ",") %>%
group_by(artist_genre) %>%
filter(n() >= 10)
genre_data
summarised_data <- genre_data %>%
group_by(artist_genre) %>%
mutate(mean_danceability = mean(danceability))
summarised_data
summarised_data <- genre_data %>%
group_by(artist_genre) %>%
mutate(mean_danceability = mean(danceability)) %>%
select(artist_genre, mean_danceability)
summarised_data
summarised_data <- genre_data %>%
group_by(artist_genre) %>%
unique %>%
mutate(mean_danceability = mean(danceability)) %>%
select(artist_genre, mean_danceability)
summarised_data
summarised_data <- genre_data %>%
group_by(artist_genre) %>%
summarise(mean_danceability = mean(danceability)) %>%
select(artist_genre, mean_danceability)
summarised_data
summarised_data <- genre_data %>%
group_by(artist_genre) %>%
summarise(mean_danceability = round(mean(danceability),7)) %>%
select(artist_genre, mean_danceability)
summarised_data
song_data
length(song_data)
song_data <- fromJSON("https://stat.auckland.ac.nz/~fergusson/stats220_S124/data/lab4B.json")
length(song_data)
glimpse(song_data)
ggplot() + geom_point(data = summarised_data,
aes(x = mean_danceability,
y = select(artist_genre, mean_danceability)),
shape = 17,
colour = "red",
size = 4) +
geom_jitter(data = summarised_data,
aes(x = danceability,
y = artist_genre),
height = 0.3,
colour = "pink",
size = 2) +
labs(title = "comparing shit",
y="genre of artist",
x="dance of song") +
theme_minimal
ggplot() + geom_point(data = summarised_data,
aes(x = mean_danceability,
y = select(artist_genre, mean_danceability)),
shape = 17,
colour = "red",
size = 4) +
geom_jitter(data = summarised_data,
aes(x = danceability,
y = artist_genre),
height = 0.3,
colour = "pink",
size = 2) +
labs(title = "comparing shit",
y="genre of artist",
x="dance of song") +
theme_minimal()
ggplot() + geom_point(data = summarised_data,
aes(x = mean_danceability,
y = group_by(artist_genre, mean_danceability)),
shape = 17,
colour = "red",
size = 4) +
geom_jitter(data = summarised_data,
aes(x = danceability,
y = artist_genre),
height = 0.3,
colour = "pink",
size = 2) +
labs(title = "comparing shit",
y="genre of artist",
x="dance of song") +
theme_minimal()
ggplot() + geom_point(data = summarised_data,
aes(x = mean_danceability,
y = reorder(artist_genre, mean_danceability)),
shape = 17,
colour = "red",
size = 4) +
geom_jitter(data = summarised_data,
aes(x = danceability,
y = artist_genre),
height = 0.3,
colour = "pink",
size = 2) +
labs(title = "comparing shit",
y="genre of artist",
x="dance of song") +
theme_minimal()
song_data <- fromJSON("https://stat.auckland.ac.nz/~fergusson/stats220_S124/data/lab4B.json")
genre_data <- song_data %>%
separate_rows(artist_genre, sep = ",") %>%
group_by(artist_genre) %>%
filter(n() >= 10)
summarised_data <- genre_data %>%
group_by(artist_genre) %>%
summarise(mean_danceability = round(mean(danceability),7)) %>%
select(artist_genre, mean_danceability)
ggplot() + geom_point(data = summarised_data,
aes(x = mean_danceability,
y = reorder(artist_genre, mean_danceability)),
shape = 17,
colour = "red",
size = 4) +
geom_jitter(data = summarised_data,
aes(x = danceability,
y = artist_genre),
height = 0.3,
colour = "pink",
size = 2) +
labs(title = "comparing shit",
y="genre of artist",
x="dance of song") +
theme_minimal()
ggplot() + geom_point(data = summarised_data,
aes(x = mean_danceability,
y = reorder(artist_genre, mean_danceability)),
shape = 17,
colour = "red",
size = 4) +
geom_jitter(data = genre_data,
aes(x = danceability,
y = artist_genre),
height = 0.3,
colour = "pink",
size = 2) +
labs(title = "comparing shit",
y="genre of artist",
x="dance of song") +
theme_minimal()
url1 <- "https://stat.auckland.ac.nz/~fergusson/stats220_S124/zoom_data/participants5.csv"
url2 <- "https://stat.auckland.ac.nz/~fergusson/stats220_S124/zoom_data/participants4.csv"
url1 <- "https://stat.auckland.ac.nz/~fergusson/stats220_S124/zoom_data/participants5.csv"
url1
print(url1)
data1 <- read_csv(url1)
data2 <- read_csv(url2)
print(data1)
data1 %>%
group_by(private_name) %>%
unique()
data1$private_name
unique(data1$private_name)
n(unique(data1$private_name))
length(unique(data1$private_name))
all_data <- bind_rows(data1, data2)
round(mean(all_data$duration_minutes))
round(mean(all_data$duration_minutes), 1)
all_data %>%
group_by(private_name)
all_data %>%
group_by(private_name) %>%
summarise(max_duration = max(duration_minutes))
all_data %>%
group_by(private_name) %>%
summarise(max_duration = max(duration_minutes)) %>%
arrange(max_duration)
all_data %>%
group_by(private_name) %>%
summarise(max_duration = max(duration_minutes)) %>%
arrange(desc(max_duration))
all_data
all_data %>%
filter(in_waiting_room = "Yes") %>%
group_by(date_lecture)
all_data %>%
filter(in_waiting_room == "Yes") %>%
group_by(date_lecture)
all_data %>%
filter(in_waiting_room == "Yes") %>%
summarise(date_lecture)
all_data %>%
filter(in_waiting_room == "Yes") %>%
group_by(date_lecture) %>%
summarise(num_students = n())
all_data %>%
group_by(date_lecture, in_waiting_room) %>%
summarise(n())
apple_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vR6jVuO3F3DNwX1WApTvCfYqfjehcNKHmuDqupk2_0vJe0lnf81dmUlsXZGkZKmaCeallS5Dqch05ks/pub?gid=1338968646&single=true&output=csv") %>%
slice(11 : 83)
apple_data$trackName[43]
nchar(apple_data$trackName[43])
apple_data %>%
mutate(track_name_lower = str_to_lower(trackName))
apple_data %>%
mutate(track_name_lower = str_to_lower(trackName)) %>%
select(31)
apple_data %>%
mutate(track_name_lower = str_to_lower(trackName))
apple_data <- apple_data %>%
mutate(track_name_lower = str_to_lower(trackName))
apple_data$track_name_lower[31]
apple_data <- apple_data %>%
mutate(track_name_clean = str_remove_all("[[:punct:]]"))
apple_data <- apple_data %>%
mutate(track_name_clean = str_remove_all("track_name_lower, [[:punct:]]"))
apple_data <- apple_data %>%
mutate(track_name_clean = str_remove_all(track_name_lower, "[[:punct:]]"))
apple_data$track_name_clean[25]
apple_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vR6jVuO3F3DNwX1WApTvCfYqfjehcNKHmuDqupk2_0vJe0lnf81dmUlsXZGkZKmaCeallS5Dqch05ks/pub?gid=1338968646&single=true&output=csv") %>%
slice(11 : 83)
apple_data[25]
apple_data$trackName[25]
apple_data <- apple_data %>%
mutate(track_name_lower = str_to_lower(trackName))
apple_data <- apple_data %>%
mutate(track_name_clean = str_remove_all(track_name_lower, "[[:punct:]]"))
apple_data %>%
separate_rows(track_name_clean) %>%
n()
apple_data %>%
separate_rows(track_name_clean) %>%
nchar()
apple_data %>%
separate_rows(track_name_clean)
apple_data %>%
separate_rows(track_name_clean) %>%
select(track_name_clean)
apple_data %>%
separate_rows(track_name_clean) %>%
select(track_name_clean) %>%
unique()
headlines_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vSzM_3hRnNKMfAv3-bn_yF833sqB7AWrMVEGs2dRKJ77myE7oHX2VKDlKWg6NmiVZ5Cj5Y5gFY4KSo1/pub?gid=0&single=true&output=csv") %>%
slice(119 : 230)
headlines_data$headline[91]
headlines_data$headline[89]
headline_words1 <- headlines_data$headline[89] %>%
str_squish() %>%
str_split()
headline_words1 <- headlines_data$headline[89] %>%
str_squish() %>%
str_split(" ")
headline_words1
headline_words1 <- headlines_data$headline[89] %>%
str_squish() %>%
str_split(" ") %>%
unlist()
headline_words1
headline_words1 <- headlines_data$headline[101] %>%
str_squish() %>%
str_split(" ") %>%
unlist()
headline_words1 <- headlines_data$headline[89] %>%
str_squish() %>%
str_split(" ") %>%
unlist()
headline_words2 <- headlines_data$headline[101] %>%
str_squish() %>%
str_split(" ") %>%
unlist()
headline_words1
headline_words2
all_words <- union(headline_words1, headline_words2)
all_words
same_words <- intersect(headline_words1, headline_words2)
same_words
get_similarity <- function(phrase1, phrase2){
words1 <- phrase1 %>% str_squish() %>% str_split(" ") %>% unlist()
words2 <- phrase2 %>% str_squish() %>% str_split(" ") %>% unlist()
num_same <- intersect(words1, words2) %>% length()
num_total <- union(words1, words2) %>% length()
num_same / num_total # remember last thing created is returned by default, or use return()
}
get_similarity(headlines_data$headline[69], headlines_data$headline[44])
compare_headlines <- tibble(headline1 = headlines_data$headline[1:56], headline2 = headlines_data$headline[57:112])
library(tidyverse)
library(jsonlite)
library(magick)
json_data <- fromJSON("pixabay_data.json")
pixabay_photo_data <- json_data$hits
library(rvest)
new_things <- things %>%
merge("hey")
things = c("hi", "yes", "no", "test")
new_things <- things %>%
merge("hey")
new_things
things = c("hi", "yes", "no", "test")
new_things <- things %>%
add("hey")
things = c("hi", "yes", "no", "test")
new_things <- things %>%
combine("hey")
things = c("hi", "yes", "no", "test")
new_things <- things %>%
concatenate("hey")
things = c("hi", "yes", "no", "test")
new_things <- things %>%
union("hey")
new_things
new_things <- things %>%
paste0("hey")
new_things
new_things <- things %>%
paste1("hey")
new_things <- things %>%
paste0("hey")
new_things
new_things <- things %>%
paste0("hey", things)
new_things
new_things <- things %>%
paste("hey", things)
new_things
new_things <- things %>%
paste("hey")
new_things
new_things <- things %>%
paste("hey0")
new_things
new_things <- things %>%
paste0("hey")
new_things
